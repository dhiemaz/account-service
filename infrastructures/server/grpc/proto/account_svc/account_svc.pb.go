// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: account_svc.proto

package account_svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistrationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	UserData *UserData `protobuf:"bytes,2,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Office   []*Data   `protobuf:"bytes,3,rep,name=office,proto3" json:"office,omitempty"`
	Role     []*Data   `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	Access   []*Data   `protobuf:"bytes,5,rep,name=access,proto3" json:"access,omitempty"`
}

func (x *RegistrationData) Reset() {
	*x = RegistrationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationData) ProtoMessage() {}

func (x *RegistrationData) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationData.ProtoReflect.Descriptor instead.
func (*RegistrationData) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegistrationData) GetUserData() *UserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *RegistrationData) GetOffice() []*Data {
	if x != nil {
		return x.Office
	}
	return nil
}

func (x *RegistrationData) GetRole() []*Data {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RegistrationData) GetAccess() []*Data {
	if x != nil {
		return x.Access
	}
	return nil
}

// --------------------------- Account Registration Request and Response -------------------- //
type AccountRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string    `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	UserData *UserData `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Role     []*Data   `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	Access   []*Data   `protobuf:"bytes,5,rep,name=access,proto3" json:"access,omitempty"`
	Office   []*Data   `protobuf:"bytes,6,rep,name=office,proto3" json:"office,omitempty"`
}

func (x *AccountRegistrationRequest) Reset() {
	*x = AccountRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegistrationRequest) ProtoMessage() {}

func (x *AccountRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegistrationRequest.ProtoReflect.Descriptor instead.
func (*AccountRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{1}
}

func (x *AccountRegistrationRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountRegistrationRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AccountRegistrationRequest) GetUserData() *UserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *AccountRegistrationRequest) GetRole() []*Data {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AccountRegistrationRequest) GetAccess() []*Data {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *AccountRegistrationRequest) GetOffice() []*Data {
	if x != nil {
		return x.Office
	}
	return nil
}

type AccountRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Response         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *RegistrationData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AccountRegistrationResponse) Reset() {
	*x = AccountRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegistrationResponse) ProtoMessage() {}

func (x *AccountRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegistrationResponse.ProtoReflect.Descriptor instead.
func (*AccountRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{2}
}

func (x *AccountRegistrationResponse) GetStatus() *Response {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountRegistrationResponse) GetData() *RegistrationData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ------------------------------ AccountUpdate Request and Response ----------------------- //
type AccountUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Data     *UserData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Role     []*Data   `protobuf:"bytes,3,rep,name=role,proto3" json:"role,omitempty"`
	Access   []*Data   `protobuf:"bytes,4,rep,name=access,proto3" json:"access,omitempty"`
	Office   []*Data   `protobuf:"bytes,5,rep,name=office,proto3" json:"office,omitempty"`
}

func (x *AccountUpdateRequest) Reset() {
	*x = AccountUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateRequest) ProtoMessage() {}

func (x *AccountUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateRequest.ProtoReflect.Descriptor instead.
func (*AccountUpdateRequest) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{3}
}

func (x *AccountUpdateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountUpdateRequest) GetData() *UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AccountUpdateRequest) GetRole() []*Data {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AccountUpdateRequest) GetAccess() []*Data {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *AccountUpdateRequest) GetOffice() []*Data {
	if x != nil {
		return x.Office
	}
	return nil
}

type AccountUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *Response `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Username string    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserData *UserData `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Role     []*Data   `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	Access   []*Data   `protobuf:"bytes,5,rep,name=access,proto3" json:"access,omitempty"`
	Office   []*Data   `protobuf:"bytes,6,rep,name=office,proto3" json:"office,omitempty"`
}

func (x *AccountUpdateResponse) Reset() {
	*x = AccountUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateResponse) ProtoMessage() {}

func (x *AccountUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateResponse.ProtoReflect.Descriptor instead.
func (*AccountUpdateResponse) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{4}
}

func (x *AccountUpdateResponse) GetStatus() *Response {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountUpdateResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountUpdateResponse) GetUserData() *UserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *AccountUpdateResponse) GetRole() []*Data {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AccountUpdateResponse) GetAccess() []*Data {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *AccountUpdateResponse) GetOffice() []*Data {
	if x != nil {
		return x.Office
	}
	return nil
}

// --------------------------------- AccountSearch Request and Response ---------------------- //
type AccountSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *AccountSearchRequest) Reset() {
	*x = AccountSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSearchRequest) ProtoMessage() {}

func (x *AccountSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSearchRequest.ProtoReflect.Descriptor instead.
func (*AccountSearchRequest) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{5}
}

func (x *AccountSearchRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AccountSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *Response           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Pagination *Pagination         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Data       []*RegistrationData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AccountSearchResponse) Reset() {
	*x = AccountSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSearchResponse) ProtoMessage() {}

func (x *AccountSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSearchResponse.ProtoReflect.Descriptor instead.
func (*AccountSearchResponse) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{6}
}

func (x *AccountSearchResponse) GetStatus() *Response {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountSearchResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AccountSearchResponse) GetData() []*RegistrationData {
	if x != nil {
		return x.Data
	}
	return nil
}

// --------------------------------- AccountSearchByUsername Request and Response ---------------------- //
type AccountSearchByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *AccountSearchByUsernameRequest) Reset() {
	*x = AccountSearchByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSearchByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSearchByUsernameRequest) ProtoMessage() {}

func (x *AccountSearchByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSearchByUsernameRequest.ProtoReflect.Descriptor instead.
func (*AccountSearchByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{7}
}

func (x *AccountSearchByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type AccountSearchByUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Response         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *RegistrationData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AccountSearchByUsernameResponse) Reset() {
	*x = AccountSearchByUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSearchByUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSearchByUsernameResponse) ProtoMessage() {}

func (x *AccountSearchByUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSearchByUsernameResponse.ProtoReflect.Descriptor instead.
func (*AccountSearchByUsernameResponse) Descriptor() ([]byte, []int) {
	return file_account_svc_proto_rawDescGZIP(), []int{8}
}

func (x *AccountSearchByUsernameResponse) GetStatus() *Response {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountSearchByUsernameResponse) GetData() *RegistrationData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_account_svc_proto protoreflect.FileDescriptor

var file_account_svc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63,
	0x1a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x96,
	0x02, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x94,
	0x02, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2,
	0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa9, 0x03, 0x0a, 0x0f, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x76, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x76,
	0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_svc_proto_rawDescOnce sync.Once
	file_account_svc_proto_rawDescData = file_account_svc_proto_rawDesc
)

func file_account_svc_proto_rawDescGZIP() []byte {
	file_account_svc_proto_rawDescOnce.Do(func() {
		file_account_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_svc_proto_rawDescData)
	})
	return file_account_svc_proto_rawDescData
}

var file_account_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_account_svc_proto_goTypes = []interface{}{
	(*RegistrationData)(nil),                // 0: account_svc.RegistrationData
	(*AccountRegistrationRequest)(nil),      // 1: account_svc.AccountRegistrationRequest
	(*AccountRegistrationResponse)(nil),     // 2: account_svc.AccountRegistrationResponse
	(*AccountUpdateRequest)(nil),            // 3: account_svc.AccountUpdateRequest
	(*AccountUpdateResponse)(nil),           // 4: account_svc.AccountUpdateResponse
	(*AccountSearchRequest)(nil),            // 5: account_svc.AccountSearchRequest
	(*AccountSearchResponse)(nil),           // 6: account_svc.AccountSearchResponse
	(*AccountSearchByUsernameRequest)(nil),  // 7: account_svc.AccountSearchByUsernameRequest
	(*AccountSearchByUsernameResponse)(nil), // 8: account_svc.AccountSearchByUsernameResponse
	(*UserData)(nil),                        // 9: account_svc.user_data
	(*Data)(nil),                            // 10: account_svc.data
	(*Response)(nil),                        // 11: account_svc.response
	(*PaginationRequest)(nil),               // 12: account_svc.pagination_request
	(*Pagination)(nil),                      // 13: account_svc.pagination
}
var file_account_svc_proto_depIdxs = []int32{
	9,  // 0: account_svc.RegistrationData.user_data:type_name -> account_svc.user_data
	10, // 1: account_svc.RegistrationData.office:type_name -> account_svc.data
	10, // 2: account_svc.RegistrationData.role:type_name -> account_svc.data
	10, // 3: account_svc.RegistrationData.access:type_name -> account_svc.data
	9,  // 4: account_svc.AccountRegistrationRequest.user_data:type_name -> account_svc.user_data
	10, // 5: account_svc.AccountRegistrationRequest.role:type_name -> account_svc.data
	10, // 6: account_svc.AccountRegistrationRequest.access:type_name -> account_svc.data
	10, // 7: account_svc.AccountRegistrationRequest.office:type_name -> account_svc.data
	11, // 8: account_svc.AccountRegistrationResponse.status:type_name -> account_svc.response
	0,  // 9: account_svc.AccountRegistrationResponse.data:type_name -> account_svc.RegistrationData
	9,  // 10: account_svc.AccountUpdateRequest.data:type_name -> account_svc.user_data
	10, // 11: account_svc.AccountUpdateRequest.role:type_name -> account_svc.data
	10, // 12: account_svc.AccountUpdateRequest.access:type_name -> account_svc.data
	10, // 13: account_svc.AccountUpdateRequest.office:type_name -> account_svc.data
	11, // 14: account_svc.AccountUpdateResponse.status:type_name -> account_svc.response
	9,  // 15: account_svc.AccountUpdateResponse.user_data:type_name -> account_svc.user_data
	10, // 16: account_svc.AccountUpdateResponse.role:type_name -> account_svc.data
	10, // 17: account_svc.AccountUpdateResponse.access:type_name -> account_svc.data
	10, // 18: account_svc.AccountUpdateResponse.office:type_name -> account_svc.data
	12, // 19: account_svc.AccountSearchRequest.pagination:type_name -> account_svc.pagination_request
	11, // 20: account_svc.AccountSearchResponse.status:type_name -> account_svc.response
	13, // 21: account_svc.AccountSearchResponse.pagination:type_name -> account_svc.pagination
	0,  // 22: account_svc.AccountSearchResponse.data:type_name -> account_svc.RegistrationData
	11, // 23: account_svc.AccountSearchByUsernameResponse.status:type_name -> account_svc.response
	0,  // 24: account_svc.AccountSearchByUsernameResponse.data:type_name -> account_svc.RegistrationData
	1,  // 25: account_svc.EmployeeService.AccountRegistration:input_type -> account_svc.AccountRegistrationRequest
	3,  // 26: account_svc.EmployeeService.AccountUpdate:input_type -> account_svc.AccountUpdateRequest
	5,  // 27: account_svc.EmployeeService.AccountSearch:input_type -> account_svc.AccountSearchRequest
	7,  // 28: account_svc.EmployeeService.AccountSearchByUsername:input_type -> account_svc.AccountSearchByUsernameRequest
	2,  // 29: account_svc.EmployeeService.AccountRegistration:output_type -> account_svc.AccountRegistrationResponse
	4,  // 30: account_svc.EmployeeService.AccountUpdate:output_type -> account_svc.AccountUpdateResponse
	6,  // 31: account_svc.EmployeeService.AccountSearch:output_type -> account_svc.AccountSearchResponse
	8,  // 32: account_svc.EmployeeService.AccountSearchByUsername:output_type -> account_svc.AccountSearchByUsernameResponse
	29, // [29:33] is the sub-list for method output_type
	25, // [25:29] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_account_svc_proto_init() }
func file_account_svc_proto_init() {
	if File_account_svc_proto != nil {
		return
	}
	file_validator_proto_init()
	file_base_proto_init()
	file_user_proto_init()
	file_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_account_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSearchByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSearchByUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_svc_proto_goTypes,
		DependencyIndexes: file_account_svc_proto_depIdxs,
		MessageInfos:      file_account_svc_proto_msgTypes,
	}.Build()
	File_account_svc_proto = out.File
	file_account_svc_proto_rawDesc = nil
	file_account_svc_proto_goTypes = nil
	file_account_svc_proto_depIdxs = nil
}
