syntax = "proto3";

option go_package = ".;account_svc";

package account_svc;

import "validator.proto";
import "base.proto";
import "user.proto";
import "pagination.proto";

// ---------------------------- Account Service Base Data -------------------------------------- //

message RegistrationData {
  string username = 1;
  account_svc.user_data user_data = 2;
  repeated account_svc.data office = 3;
  repeated account_svc.data role = 4;
  repeated account_svc.data access = 5;

}

// --------------------------- Account Registration Request and Response -------------------- //
message AccountRegistrationRequest {
  string username = 1 [(validator.field) = {string_not_empty : true}];
  string password = 2 [(validator.field) = {string_not_empty : true}];
  account_svc.user_data user_data = 3;
  repeated account_svc.data role = 4;
  repeated account_svc.data access = 5;
  repeated account_svc.data office = 6;
}

message AccountRegistrationResponse {
  account_svc.response status = 1;
  account_svc.RegistrationData data = 2;
}

// ------------------------------ AccountUpdate Request and Response ----------------------- //
message AccountUpdateRequest {
  string username = 1 [(validator.field) = {string_not_empty : true}];
  account_svc.user_data data = 2;
  repeated account_svc.data role = 3;
  repeated account_svc.data access = 4;
  repeated account_svc.data office = 5;
}

message AccountUpdateResponse {
  account_svc.response status = 1;
  string username = 2;
  account_svc.user_data user_data = 3;
  repeated account_svc.data role = 4;
  repeated account_svc.data access = 5;
  repeated account_svc.data office = 6;
}

// --------------------------------- AccountSearch Request and Response ---------------------- //
message AccountSearchRequest {
  account_svc.pagination_request pagination = 1;
}

message AccountSearchResponse {
  account_svc.response status = 1;
  account_svc.pagination pagination = 2;
  repeated account_svc.RegistrationData data = 3;
}

// --------------------------------- AccountSearchByUsername Request and Response ---------------------- //
message AccountSearchByUsernameRequest {
  string username = 1;
}

message AccountSearchByUsernameResponse {
  account_svc.response status = 1;
  account_svc.RegistrationData data = 3;
}

service EmployeeService {
  rpc AccountRegistration(AccountRegistrationRequest) returns (AccountRegistrationResponse) {};
  rpc AccountUpdate(AccountUpdateRequest) returns (AccountUpdateResponse) {};
  rpc AccountSearch(AccountSearchRequest) returns (AccountSearchResponse) {};
  rpc AccountSearchByUsername(AccountSearchByUsernameRequest) returns (AccountSearchByUsernameResponse) {};
}